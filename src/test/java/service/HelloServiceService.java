
package service;

import service.demo.HelloService;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.6 in JDK 6 Generated
 * source version: 2.1
 *
 */
@WebServiceClient(name = "HelloServiceService", targetNamespace = "http://127.0.0.1:7070/jdk", wsdlLocation = "http://127.0.0.1:7070/jdk?wsdl")
public class HelloServiceService extends Service {

	private final static URL HELLOSERVICESERVICE_WSDL_LOCATION;
	private final static Logger logger = Logger.getLogger(HelloServiceService.class.getName());

	static {
		URL url = null;
		try {
			URL baseUrl;
			baseUrl = HelloServiceService.class.getResource(".");
			url = new URL(baseUrl, "http://127.0.0.1:7070/jdk?wsdl");
		} catch (MalformedURLException e) {
			logger.warning(
					"Failed to create URL for the wsdl Location: 'http://127.0.0.1:7070/jdk?wsdl', retrying as a local file");
			logger.warning(e.getMessage());
		}
		HELLOSERVICESERVICE_WSDL_LOCATION = url;
	}

	public HelloServiceService(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public HelloServiceService() {
		super(HELLOSERVICESERVICE_WSDL_LOCATION, new QName("http://127.0.0.1:7070/jdk", "HelloServiceService"));
	}

	/**
	 *
	 * @return returns HelloService
	 */
	@WebEndpoint(name = "HelloServicePort")
	public service.demo.HelloService getHelloServicePort() {
		return super.getPort(new QName("http://127.0.0.1:7070/jdk", "HelloServicePort"), service.demo.HelloService.class);
	}

	/**
	 *
	 * @param features
	 *            A list of {@link WebServiceFeature} to configure
	 *            on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns HelloService
	 */
	@WebEndpoint(name = "HelloServicePort")
	public service.demo.HelloService getHelloServicePort(WebServiceFeature... features) {
		return super.getPort(new QName("http://127.0.0.1:7070/jdk", "HelloServicePort"), HelloService.class, features);
	}

}
